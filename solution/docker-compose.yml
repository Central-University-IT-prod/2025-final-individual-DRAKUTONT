version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - DJANGO_DEBUG=True
      - SERVER_ADDRESS=REDACTED:8080
      - SERVER_PORT=8080
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_CONN=REDACTED/advertising_platform
      - MINIO_STORAGE_ENDPOINT=minio:9000
      - YANDEX_GPT_MODEL_TYPE=yandexgpt
      - YANDEX_GPT_CATALOG_ID=b1gp8s6k8vk82fpui3b5
      - YANDEX_GPT_API_KEY=REDACTED
    depends_on:
      - postgres
      - redis
      - minio
  postgres:
    image: postgres:16.6
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=advertising_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.4
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
  
  minio:
    image: bitnami/minio:latest
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/bitnami/minio/data'
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_DEFAULT_BUCKETS=my-first-bucket
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres_data:
  grafana-data:
  minio_data: